name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    name: Security Checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      run: |
        # Check for sensitive files
        if find . -name "*.env" -o -name "*.key" -o -name "*.pem" -o -name "*.p12" -o -name "*.pfx" -o -name "wp-config.php" -o -name "config.php" | grep -q .; then
          echo "‚ùå Sensitive files found in repository!"
          exit 1
        fi
        
        # Check for hardcoded secrets
        if grep -r -E "(password|secret|key|token).*[:=].*['\"][^'\"]{8,}['\"]" --include="*.js" --include="*.html" --include="*.css" --exclude-dir=".git" --exclude-dir="node_modules" .; then
          echo "‚ùå Potential hardcoded secrets found!"
          exit 1
        fi
        
        # Check for SQL injection patterns
        if grep -r -E "(union.*select|drop.*table|exec.*sp_|xp_cmdshell)" --include="*.js" --include="*.html" --include="*.php" --exclude-dir=".git" .; then
          echo "‚ùå Potential SQL injection patterns found!"
          exit 1
        fi
        
        echo "‚úÖ Security checks passed"

  deploy:
    needs: security-check
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
        
    - name: Build and validate
      run: |
        # Validate HTML files
        for file in *.html; do
          if [ -f "$file" ]; then
            echo "Validating $file..."
            # Basic HTML validation
            if ! grep -q "</html>" "$file"; then
              echo "‚ùå Invalid HTML structure in $file"
              exit 1
            fi
          fi
        done
        
        # Check for required security headers in HTML
        for file in *.html; do
          if [ -f "$file" ]; then
            if ! grep -q "X-Frame-Options" "$file"; then
              echo "‚ùå Missing security headers in $file"
              exit 1
            fi
          fi
        done
        
        echo "‚úÖ Build validation passed"
        
    - name: Configure Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Post-deployment security check
      run: |
        echo "‚úÖ Deployment completed successfully"
        echo "üîí Security measures active:"
        echo "   - Security headers implemented"
        echo "   - Image crawling blocked"
        echo "   - Copyright protection active"
        echo "   - Robots.txt configured" 